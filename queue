#include<stdio.h>

#define MAXSIZE 10

int queue[MAXSIZE];
int front, rear;

void init_quene(void)
{
	printf("QUEUE SIZE is %d\n\n", MAXSIZE);
}

void clear_queue(void)//3
{
	front = rear;
}

int put(int val)//1
{
	if ((rear + 1) % MAXSIZE == front)
	{
		printf("	Queue Overflow.\n");
		return -1;
	}
	queue[rear] = val;
	rear = ++rear % MAXSIZE;
	return val;
}

int get(void)//2
{
	int i;
	if (front == rear)
	{
		printf("	Queue Underflow.\n");
		return (-1);
	}

	i = queue[front];
	front = ++front % MAXSIZE;
	return i;
}

void print_queue(void)
{
	int i;
	printf("	Queue From Front------> To Rear \n");
	for (i = front; i != rear; i = ++i % MAXSIZE)
	{
		printf("%-6d", queue[i]);
	}
	printf("\n");
}

void main(void)
{
	int i;
	int a;
	int b;
	char c;
	FILE* pFile;
	pFile = fopen("file.txt", "r");

	fscanf(pFile, "%d", &front);
	fscanf(pFile, "%d", &rear);

	init_quene();

	for (int j = front; j < rear; j++)
	{
		fscanf(pFile, "%d", &queue[j]);
	}

	fclose(pFile);

	pFile = fopen("file.txt", "w");
	while (1)
	{
		scanf("%d", &a);
		switch (a)
		{
		case 1:
			scanf("%d", &b);
			put(b);
			break;
		case 2:
			get();
			break;
		case 3:
			clear_queue();
			break;
		}
		print_queue();
		printf("계속 하실 건가요?(y/n) : ");
		scanf(" %c", &c);
		if (c == 'n')
			break;
		
	}
	fprintf(pFile, "%d %d\n", front, rear);
	for (int j = front; j < rear; j++)
	{
		fprintf(pFile, "%d\n", queue[j]);
	}
	fclose(pFile);
}
